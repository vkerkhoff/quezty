{"version":3,"sources":["QuizProjector/Context/Projector.js","Shared/Timer.js","QuizProjector/Header.js","Shared/Socket.js","QuizProjector/Context/Sockets/index.js","QuizProjector/Context/Sockets/Events.js","QuizProjector/Context/Sockets/Emit.js","QuizProjector/Context/index.js","QuizProjector/Join.js","QuizProjector/Question.js","QuizProjector/Answers.js","QuizProjector/index.js","QuizContender/Context/Contender.js","QuizContender/Context/Sockets/Emit.js","QuizContender/Context/Sockets/index.js","QuizContender/Context/Sockets/Events.js","QuizContender/Context/index.js","QuizContender/Answers.js","QuizContender/ChangeUserName.js","QuizContender/Header.js","QuizContender/Join.js","QuizContender/index.js","QuizMaster/Context/Admin.js","QuizMaster/Header.js","QuizMaster/Context/Sockets/Emit.js","QuizMaster/Question/Header.js","QuizMaster/Question/ShowQuestion.js","QuizMaster/Question/index.js","QuizMaster/ScoreBoard/Header.js","QuizMaster/ScoreBoard/ContenderRow.js","QuizMaster/ScoreBoard/ContenderList.js","QuizMaster/ScoreBoard/index.js","QuizMaster/Contenders/Header.js","QuizMaster/Contenders/ContenderCard.js","QuizMaster/Contenders/ContenderList.js","QuizMaster/Contenders/index.js","QuizMaster/Context/Sockets/Events.js","QuizMaster/Context/Sockets/index.js","QuizMaster/Context/index.js","QuizMaster/index.js","App.js","index.js"],"names":["ProjectorContext","React","createContext","current","total","quizData","name","Timer","props","timer","completed","Math","floor","color","CircularProgress","size","variant","value","useStyles","makeStyles","root","width","textAlign","paddingLeft","float","Header","useContext","questionData","classes","className","button","Typography","gutterBottom","remoteHost","process","HOST","socket","io","initSockets","quizId","setValue","on","state","socketEvents","emit","startQuiz","ProjectorContextProvider","useState","useEffect","Projector","Provider","children","marginTop","Join","protocol","window","location","hostName","host","Question","question","list","marginBottom","Answers","listItems","Object","keys","answers","map","id","key","type","theme","flexGrow","backgroundColor","palette","paper","padding","spacing","text","secondary","match","params","Grid","container","item","xs","Paper","ContenderContext","selectedAnswer","updateUsername","userName","postAnswer","answerId","console","log","joinQuiz","ContenderContextProvider","Contender","rootCentered","noBullets","listStyleType","setSelectedAnswer","disableAnswer","show","Button","onClick","selectAnswer","disabled","option","ChangeUserName","setUserName","handleClose","setOpen","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","DialogActions","avatar","height","charAt","Avatar","form","setForm","updateForm","setQuizId","localStorage","getItem","setUsername","setItem","AdminContext","users","scoreboard","questions","allowed","buttons","projectorLink","nextQuestion","startTimer","marginLeft","endQuiz","buttonText","showTimer","length","ContenderRow","scoreboardData","userId","TableRow","TableCell","component","scope","username","align","points","tableWrapper","maxHeight","overflow","ContenderList","ContenderId","push","sort","a","b","Table","stickyHeader","aria-label","TableHead","sortDirection","TableBody","ScoreBoard","contenders","card","stateWait","grey","stateCorrect","green","stateWrong","red","ContenderCard","userData","cardClass","currentAnswer","Card","CardContent","paddingBottom","Contenders","autostartTimer","AdminContextProvider","Admin","QuizMaster","paddingTop","createMuiTheme","ReactDOM","render","ThemeProvider","CssBaseline","path","QuizProjector","QuizContender","document","getElementById"],"mappings":"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","file":"static/js/main.16feb9d7.chunk.js","sourcesContent":["import React from 'react';\n\nconst ProjectorContext = React.createContext({\n    current: 0,\n    total: 0,\n    quizData: {\n        name: '',\n    }\n});\n\nexport default ProjectorContext","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function Timer(props) {\n    const timer = props.timer;\n    const completed = 100-Math.floor(timer.current/timer.total*100);\n    let color = 'inherit';\n\n    if (timer.total - timer.current < 10) {\n        color = 'secondary';\n    }\n\n    return (\n        <CircularProgress size={30} variant=\"static\" value={completed} color={color} />\n    );\n}","import React, { useContext } from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectorContext from \"./Context/Projector\";\nimport Timer from \"../Shared/Timer\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        textAlign: 'center',\n        paddingLeft: 30,\n    },\n    timer:{\n        float: 'right',\n    },\n});\nexport default function Header(props) {\n    let total = 0;\n    let current = 0;\n\n    const { questionData, timer, quizData } = useContext(ProjectorContext);\n    const classes = useStyles();\n    if (questionData) {\n        total = questionData.total;\n        current = questionData.current;\n    }\n    return (\n        <div className={classes.root}>\n            <div className={classes.timer}>\n                <div className={classes.button}>\n                    <Timer timer={timer}/>\n                </div>\n            </div>\n            <Typography variant=\"h5\" gutterBottom={false}>\n                {quizData.name} {current ? (\n                <span>[{current} / {total}]</span>\n            ) : ('')}\n            </Typography>\n        </div>\n    );\n}","import io from \"socket.io-client\";\n\nconst remoteHost = process.env.HOST || 'https://app.master-7rqtwti-xzpc4qbs5kuvs.eu-2.platformsh.site/';\n\nexport const socket = io(remoteHost);\n","import { socketEvents } from \"./Events\";\nimport { startQuiz } from \"./Emit\";\n\nexport const initSockets = ({ setValue }, quizId) => {\n    socketEvents({ setValue });\n    startQuiz(quizId);\n};","import { socket } from '../../../Shared/Socket';\n\nconst STATE_QUIZ_JOINED = 'QUIZ-JOINED';\nconst STATE_QUESTION_DETAILS = 'QUESTION-DETAILS';\n\nconst STATE_QUESTION_TIMER_START = 'QUESTION-TIMER-START';\nconst STATE_QUESTION_TIMER_UPDATE = 'QUESTION-TIMER-UPDATE';\nconst STATE_QUESTION_TIMER_STOP = 'QUESTION-TIMER-STOP';\n\nexport const socketEvents = ({ setValue }) => {\n    socket.on(STATE_QUESTION_DETAILS, (questionData) => {\n        setValue(state => { return { ...state, questionData } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_START, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_UPDATE, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_STOP, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUIZ_JOINED, (quizData) => {\n        setValue(state => { return { ...state, quizData } });\n    });\n};","import { socket } from '../../../Shared/Socket';\n\nconst STATE_QUIZ_JOIN_PROJECTOR = 'QUIZ-JOIN-PROJECTOR';\n\nexport const startQuiz = (quizId) => {\n    socket.emit(STATE_QUIZ_JOIN_PROJECTOR, quizId);\n};\n","import React, { useState, useEffect } from \"react\";\nimport ProjectorContext from \"./Projector\";\nimport { initSockets } from \"./Sockets\"\n\nconst ProjectorContextProvider = (props) => {\n    const quizId = props.quizId;\n\n    const [value, setValue] = useState({\n        current: 1,\n        total: 1,\n        timer: {\n            total: 60,\n            current: 0,\n        },\n        quizData: {\n            name: '',\n        }\n    });\n\n    useEffect(() => initSockets({ setValue }, quizId), [quizId]);\n\n    return(\n        <ProjectorContext.Provider value={ value }>\n            { props.children }\n        </ProjectorContext.Provider>\n    )\n};\nexport default ProjectorContextProvider;","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        marginTop: 25,\n        textAlign: 'center',\n    },\n});\nexport default function Join(props) {\n    const classes = useStyles();\n    const protocol = window.location.protocol;\n    const hostName = window.location.host;\n    return (\n        <div className={classes.root}>\n                <Typography variant=\"h5\" gutterBottom={false}>\n                    Join this Quiz:<br/><br/>\n                    {protocol}{'//'}{hostName}/play/{props.quizId}/\n                </Typography>\n        </div>\n    );\n}","import React, {useContext} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectorContext from \"./Context/Projector\";\nimport Join from \"./Join\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        marginTop: 25,\n    },\n});\nexport default function Question(props) {\n    const { questionData } = useContext(ProjectorContext);\n    const classes = useStyles();\n\n    if (questionData && questionData.current) {\n        return (\n            <div className={classes.root}>\n                <Typography variant=\"h5\" gutterBottom={false}>\n                    {questionData.question}\n                </Typography>\n            </div>\n        );\n    } else {\n        return (<Join quizId={props.quizId}/>);\n    }\n}","import React, {useContext} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectorContext from \"./Context/Projector\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        marginTop: 25,\n    },\n    list: {\n        marginBottom: 30,\n    }\n});\nexport default function Answers(props) {\n    const { questionData } = useContext(ProjectorContext);\n    const classes = useStyles();\n\n    if (questionData && questionData.current) {\n        const listItems = Object.keys(questionData.answers).map((id) =>\n            <li key={id} className={classes.list}>{questionData.answers[id].value}</li>\n        );\n        return (\n            <div className={classes.root}>\n                <Typography variant=\"h5\" gutterBottom={false}>\n                  <ol type='A'>{listItems}</ol>\n                </Typography>\n            </div>\n        );\n    } else {\n        return ('');\n    }\n}","import React from \"react\";\nimport Header from \"./Header\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ProjectorContextProvider from \"./Context\";\nimport Question from \"../QuizProjector/Question\";\nimport Answers from \"./Answers\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.backgroundColor,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function Projector(props) {\n    const quizId = props.match.params.quizId;\n    const classes = useStyles();\n\n    return (\n        <ProjectorContextProvider quizId={quizId}>\n            <div className={classes.root}>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={1}/>\n                        <Grid item xs={10}>\n                            <Paper className={classes.paper}><Header quizId={quizId}/></Paper>\n                        </Grid>\n                        <Grid item xs={1}/>\n                        <Grid item xs={1}/>\n                        <Grid item xs={10}>\n                            <Paper className={classes.paper}><Question quizId={quizId}/></Paper>\n                            <Paper className={classes.paper}><Answers/></Paper>\n                        </Grid>\n                        <Grid item xs={1}/>\n                    </Grid>\n            </div>\n        </ProjectorContextProvider>\n    );\n}","import React from 'react';\n\nconst ContenderContext = React.createContext({\n    selectedAnswer: -1,\n    current: 0,\n    total: 0,\n    timer: {},\n    quizData: {\n        name: '',\n    }\n});\n\nexport default ContenderContext","import { socket } from \"../../../Shared/Socket\";\n\nconst STATE_QUESTION_ANSWER = 'QUESTION-ANSWER';\nconst STATE_QUIZ_JOIN = 'QUIZ-JOIN';\nconst STATE_QUIZ_CHANGE_USERNAME = 'QUIZ-CHANGE-USERNAME';\n\nexport const joinQuiz = (quizId, userName) => {\n    if (quizId && userName) {\n        socket.emit(STATE_QUIZ_JOIN, quizId, userName);\n    }\n};\n\nexport const updateUsername = (userName) => {\n    socket.emit(STATE_QUIZ_CHANGE_USERNAME, userName);\n};\n\nexport const postAnswer = (answerId) => {\n    socket.emit(STATE_QUESTION_ANSWER, answerId);\n};\n","import { socketEvents } from \"./Events\";\nimport { joinQuiz } from \"./Emit\";\n\nexport const initSockets = ({ setValue }, quizId, userName) => {\n    socketEvents({ setValue });\n    joinQuiz(quizId, userName);\n};","import { socket } from '../../../Shared/Socket';\n\nconst STATE_QUIZ_JOINED = 'QUIZ-JOINED';\nconst STATE_QUESTION_DETAILS = 'QUESTION-DETAILS';\n\nconst STATE_QUESTION_TIMER_START = 'QUESTION-TIMER-START';\nconst STATE_QUESTION_TIMER_UPDATE = 'QUESTION-TIMER-UPDATE';\nconst STATE_QUESTION_TIMER_STOP = 'QUESTION-TIMER-STOP';\n\nexport const socketEvents = ({ setValue }) => {\n    socket.on(STATE_QUESTION_DETAILS, (questionData) => {\n        console.log(questionData);\n        setValue(state => { return { ...state, questionData } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_START, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_UPDATE, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_STOP, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUIZ_JOINED, (quizData) => {\n        setValue(state => { return { ...state, quizData } });\n    });\n\n};","import React, { useState, useEffect } from \"react\";\nimport ContenderContext from \"./Contender\";\nimport { initSockets } from \"./Sockets\"\n\nconst ContenderContextProvider = (props) => {\n    const quizId = props.quizId;\n    const userName = props.userName;\n\n    const [value, setValue] = useState({\n        name: '',\n        selectedAnswer: -1,\n        current: 1,\n        total: 1,\n        timer: {},\n        quizData: {\n            name: '',\n        }\n    });\n\n    useEffect(() => initSockets({ setValue }, quizId, userName), [quizId, userName]);\n\n    return(\n        <ContenderContext.Provider value={ value }>\n            { props.children }\n        </ContenderContext.Provider>\n    )\n};\nexport default ContenderContextProvider;","import React, {useContext, useState} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContenderContext from \"./Context/Contender\";\nimport Button from \"@material-ui/core/Button\";\nimport { postAnswer } from \"./Context/Sockets/Emit\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        marginTop: 25,\n    },\n    rootCentered: {\n        width: '100%',\n        marginTop: 25,\n        textAlign: 'center',\n    },\n    list: {\n        marginBottom: 30,\n    },\n    noBullets: {\n        listStyleType: 'none',\n        textAlign: 'center',\n    },\n    button: {\n        width: 250,\n        padding: 20,\n    }\n});\n\nfunction selectAnswer(id, questionData) {\n    questionData.selectedAnswer = id;\n    postAnswer(id);\n}\n\nexport default function Answers(props) {\n    const [selectedAnswer, setSelectedAnswer] = useState(-1);\n\n    const { questionData, timer } = useContext(ContenderContext);\n    const classes = useStyles();\n\n    let disableAnswer = false;\n    if (!timer.show) {\n        disableAnswer = true;\n    }\n\n    if (questionData && questionData.current) {\n        const listItems = Object.keys(questionData.answers).map((id) =>\n            <li key={id} className={classes.list}>\n                <Button key={id}\n                        variant=\"contained\"\n                        color={questionData.selectedAnswer===id ? 'primary' : 'default'}\n                        className={classes.button}\n                        onClick={()=>{setSelectedAnswer(id); selectAnswer(id, questionData)}}\n                        disabled={disableAnswer}\n                >\n                    {questionData.answers[id].option}\n                </Button>\n            </li>\n        );\n\n        return (\n            <div className={classes.root}>\n                <Typography variant=\"h5\" gutterBottom={false}>\n                  <ul className={classes.noBullets} key={selectedAnswer}>{listItems}</ul>\n                </Typography>\n            </div>\n        );\n    } else {\n        return (\n            <div className={classes.rootCentered}>\n                <Typography variant=\"h5\" gutterBottom={false}>\n                   Waiting for quiz to start!\n                </Typography>\n            </div>\n        );\n    }\n}","import React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { updateUsername } from \"./Context/Sockets/Emit\";\n\nexport default function ChangeUserName(props){\n    const [userName, setUserName] = useState(props.userName);\n\n    function updateUserName(event) {\n        setUserName(event.target.value);\n    }\n\n    const handleClose = () => {\n        props.setOpen(false);\n    };\n\n    const handleSave = () => {\n        if (userName) {\n            props.setOpen(false);\n            props.setUserName(userName);\n            updateUsername(userName);\n        }\n    };\n\n    return (\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Change Username</DialogTitle>\n            <DialogContent>\n                <TextField\n                    variant='filled'\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"username\"\n                    label=\"Username\"\n                    value={userName}\n                    type=\"text\"\n                    fullWidth\n                    onChange={updateUserName}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} variant='contained' color=\"default\">\n                    Cancel\n                </Button>\n                <Button onClick={handleSave} variant='contained' color=\"primary\">\n                    Update\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import React, { useContext, useState } from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContenderContext from \"./Context/Contender\";\nimport Timer from \"../Shared/Timer\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ChangeUserName from \"./ChangeUserName\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        textAlign: 'center',\n    },\n    avatar: {\n        float: 'left',\n        width: 30,\n        height: 30,\n    },\n    timer:{\n        float: 'right',\n    },\n});\nexport default function Header(props) {\n    const [open, setOpen] = useState(false);\n\n    const {questionData, timer, quizData} = useContext(ContenderContext);\n    let quizId = props.quizId;\n    let userName = props.userName;\n\n    let total = 0;\n    let current = 0;\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const classes = useStyles();\n    if (questionData) {\n        total = questionData.total;\n        current = questionData.current;\n    }\n    let avatar = userName.charAt(0);\n    return (\n        <div className={classes.root}>\n            <div className={classes.timer}>\n                <div className={classes.button}>\n                    <Timer timer={timer}/>\n                </div>\n            </div>\n            {quizId && userName ? (<Avatar size={30} className={classes.avatar} onClick={handleClickOpen}>{avatar}</Avatar>) : ''}\n            <ChangeUserName open={open} setOpen={setOpen} userName={userName} setUserName={props.setUserName}/>\n            <Typography variant=\"h5\" gutterBottom={false}>\n                {quizId && userName ? (quizData.name) : ('Join a Quiz!')}\n                {current ? (\n                <span> [{current} / {total}]</span>\n            ) : ('')}\n            </Typography>\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        marginTop: 25,\n    },\n    rootCentered: {\n        width: '100%',\n        marginTop: 25,\n        textAlign: 'center',\n    },\n    button: {\n        width: 250,\n        padding: 20,\n    }\n});\n\nexport default function Join(props) {\n    const [form, setForm] = useState({\n        quizId: props.quizId,\n        userName: props.userName,\n    });\n\n    function updateForm(event) {\n        setForm({...form, [event.target.id]: event.target.value});\n    }\n\n    function submitForm(){\n        props.setQuizId(form.quizId);\n        props.setUserName(form.userName);\n    }\n\n    const classes = useStyles();\n    return (\n        <div className={classes.rootCentered}>\n            <Typography variant=\"h5\" gutterBottom={false}>\n              Enter QuizId and/or Username to continue\n            </Typography>\n            <form className={classes.rootCentered}>\n                <TextField\n                    id=\"quizId\"\n                    label=\"QuizId\"\n                    value={form.quizId}\n                    variant=\"filled\"\n                    onChange={updateForm}\n                /> &nbsp;\n                <TextField\n                    id=\"userName\"\n                    label=\"Username\"\n                    value={form.userName}\n                    variant=\"filled\"\n                    onChange={updateForm}\n                /><br/><br/>\n                <Button onClick={submitForm}\n                    color='primary' variant=\"contained\">\n                    Start\n                </Button>\n            </form>\n        </div>\n    );\n}","import React , { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ContenderContextProvider from \"./Context\";\nimport Answers from \"./Answers\";\nimport Header from \"./Header\";\nimport Join from \"./Join\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.backgroundColor,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function Contender(props) {\n    const [quizId, setQuizId] = useState(props.match.params.quizId);\n    const [userName, setUsername] = useState(localStorage.getItem('userName'));\n    const classes = useStyles();\n\n    function setUserName(name) {\n        setUsername(name);\n        localStorage.setItem('userName', name);\n    }\n    return (\n        <ContenderContextProvider quizId={quizId} userName={userName}>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={1}/>\n                    <Grid item xs={10}>\n                        <Paper className={classes.paper}><Header quizId={quizId} userName={userName} setUserName={setUsername}/></Paper>\n                    </Grid>\n                    <Grid item xs={1}/>\n                    <Grid item xs={1}/>\n                    <Grid item xs={10}>\n                        <Paper className={classes.paper}>\n                            {quizId && userName ? (\n                                <Answers/>\n                            ):(\n                                <Join quizId={quizId} userName={userName} setQuizId={setQuizId} setUserName={setUserName}/>\n                            )}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={1}/>\n                </Grid>\n            </div>\n        </ContenderContextProvider>\n    );\n}","import React from 'react';\n\nconst AdminContext = React.createContext({\n    quizData: {\n        quizId: '',\n        users: {},\n        scoreboard:{},\n        questions: {},\n        question: {},\n        allowed: true\n    },\n});\n\nexport default AdminContext","import React, { useContext } from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AdminContext from \"./Context/Admin\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        textAlign: 'center',\n    },\n    buttons:{\n        float: 'right',\n    }\n});\nexport default function Header() {\n    const { quizData } = useContext(AdminContext);\n    const classes = useStyles();\n    const projectorLink = \"/projector/\" + quizData.quizId + \"/\";\n    return (\n        <div className={classes.root}>\n            <div className={classes.buttons}>\n                <Button variant=\"contained\" onClick={()=> window.open(projectorLink, \"_blank\")}>Projector</Button>\n            </div>\n            <Typography variant=\"h5\" gutterBottom={false}>\n                Quiz Master {quizData.quizId}\n            </Typography>\n        </div>\n    );\n}","import { socket } from '../../../Shared/Socket';\n\nconst STATE_QUIZ_CREATE = 'QUIZ-CREATE';\nconst STATE_QUESTION_NEXT = 'QUESTION-NEXT';\nconst STATE_QUESTION_TIMER_START = 'QUESTION-TIMER-START';\n\nexport const startQuiz = () => {\n    socket.emit(STATE_QUIZ_CREATE);\n};\n\nexport const nextQuestion = () => {\n    socket.emit(STATE_QUESTION_NEXT);\n};\n\nexport const startTimer = () => {\n    socket.emit(STATE_QUESTION_TIMER_START);\n};\n","import React, {useContext} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport {nextQuestion, startTimer} from \"../Context/Sockets/Emit\";\nimport AdminContext from \"../Context/Admin\";\nimport Timer from \"../../Shared/Timer\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    buttons:{\n        float: 'right',\n    },\n    button:{\n        marginLeft: 10,\n        float: 'right',\n    }\n});\nexport default function Header() {\n    const { quizData, timer } = useContext(AdminContext);\n    const classes = useStyles();\n\n    let endQuiz = false;\n    let buttonText = 'Next Question';\n    let showTimer = true;\n    if (quizData && quizData.current === 0) {\n        buttonText = 'Start Quiz';\n        showTimer = false;\n    }\n    if (quizData && quizData.current >0 && quizData.current >= quizData.questions.length) {\n        endQuiz = true;\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.buttons}>\n                <div className={classes.button}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={nextQuestion} disabled={endQuiz}>\n                        {buttonText}\n                    </Button>\n                </div>\n                <div className={classes.button}>\n                    {showTimer ? <Button variant=\"contained\" color=\"secondary\" onClick={startTimer}>\n                        Start Timer\n                    </Button> : ''}\n                </div>\n                <div className={classes.button}>\n                    {showTimer ? <Timer timer={timer} /> : ''}\n                </div>\n            </div>\n            <Typography variant=\"h6\" gutterBottom={false}>\n                Question\n            </Typography>\n        </div>\n    );\n}","import React, {useContext} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AdminContext from \"../Context/Admin\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        marginTop: 25,\n    },\n    list: {\n        marginBottom: 30,\n    }\n});\nexport default function Header() {\n    const { quizData } = useContext(AdminContext);\n    const classes = useStyles();\n\n    let listItems = '';\n    if (quizData && quizData.current > 0) {\n        listItems = Object.keys(quizData.questions[quizData.current - 1].answers).map((id) =>\n            <li key={id} className={classes.list}>{quizData.questions[quizData.current - 1].answers[id].value}</li>\n        );\n    }\n    return (\n        <div className={classes.root}>\n            { quizData.current ? (\n                <div className={classes.root}>\n                    <Typography variant=\"h5\" gutterBottom={false}>\n                        {quizData.questions[quizData.current-1].question}\n                    </Typography>\n                    <Typography variant=\"h5\" gutterBottom={false}>\n                        <ol type='A'>{listItems}</ol>\n                    </Typography>\n                </div>\n            ):''}\n        </div>\n    );\n}","import React from \"react\";\nimport Header from \"./Header\";\nimport ShowQuestion from \"./ShowQuestion\";\n\nexport default function Question() {\n    return (\n        <div className='question'>\n            <Header/>\n            <ShowQuestion/>\n        </div>\n    );\n}","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        textAlign: 'center',\n    },\n});\nexport default function Header() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\" gutterBottom={false}>\n                Scoreboard\n            </Typography>\n        </div>\n    );\n}","import React, {useContext} from \"react\";\nimport AdminContext from \"../Context/Admin\";\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default function ContenderRow(props) {\n    const { quizData } = useContext(AdminContext);\n    const scoreboardData = quizData.scoreboard[props.userId];\n\n    return (\n        <TableRow key={scoreboardData.socket}>\n            <TableCell component=\"th\" scope=\"row\">\n                {scoreboardData.username}\n            </TableCell>\n            <TableCell align=\"right\">{scoreboardData.points}</TableCell>\n        </TableRow>\n    );\n}","import React, { useContext } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContenderRow from \"./ContenderRow\";\nimport AdminContext from \"../Context/Admin\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    tableWrapper: {\n        height: 300,\n        maxHeight: 300,\n        overflow: 'auto',\n    },\n});\n\nexport default function ContenderList(props) {\n    const { quizData } = useContext(AdminContext);\n    const classes = useStyles();\n\n    let scoreboard = [];\n    Object.keys(quizData.scoreboard).map(ContenderId => (\n        scoreboard.push({id: ContenderId, points: quizData.scoreboard[ContenderId].points})\n    ));\n\n    scoreboard.sort(function(a,b){\n        return b.points-a.points});\n\n    return (\n        <div className={classes.tableWrapper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Username</TableCell>\n                        <TableCell align=\"right\" sortDirection='desc'>Score</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(scoreboard).map(ContenderId => (\n                        <ContenderRow key={ContenderId} userId={scoreboard[ContenderId].id} />))\n                    }\n                </TableBody>\n            </Table>\n        </div>\n    );\n}","import React from \"react\";\nimport Header from \"./Header\";\nimport ContenderList from \"./ContenderList\";\n\nexport default function ScoreBoard() {\n    return (\n        <div className='scoreboard'>\n            <Header/>\n            <ContenderList/>\n        </div>\n    );\n}","import React, {useContext} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AdminContext from \"../Context/Admin\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n});\nexport default function Header() {\n    const { quizData } = useContext(AdminContext);\n\n    const classes = useStyles();\n    const contenders = quizData.users;\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\" gutterBottom>\n                Contenders ({Object.keys(contenders).length})\n            </Typography>\n        </div>\n    );\n}","import React, {useContext} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport AdminContext from \"../Context/Admin\";\nimport { grey, red, green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n    card: {\n        width: 275,\n        marginLeft: 15,\n        marginBottom: 15,\n        float: 'left',\n    },\n    stateWait: {\n        backgroundColor: grey[500],\n    },\n    stateCorrect: {\n        backgroundColor: green[500],\n    },\n    stateWrong: {\n        backgroundColor: red[500],\n    },\n});\nexport default function ContenderCard(props) {\n    const { quizData } = useContext(AdminContext);\n    const classes = useStyles();\n    const userData = quizData['users'][props.userId];\n\n    let cardClass = `${classes.card} `;\n    if (userData.currentAnswer === 1) {\n        cardClass = cardClass+`${classes.stateCorrect}`;\n    } else if (userData.currentAnswer === 2) {\n        cardClass = cardClass+`${classes.stateWrong}`;\n    } else {\n        cardClass = cardClass+`${classes.stateWait}`;\n    }\n\n    return (\n        <Card className={cardClass}>\n            <CardContent>\n                <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n                    {userData.username}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Total points:  {userData.points}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}","import React, { useContext } from \"react\";\nimport ContenderCard from \"./ContenderCard\";\nimport AdminContext from \"../Context/Admin\";\n\nexport default function ContenderList(props) {\n    const { quizData } = useContext(AdminContext);\n    return (\n        <div>\n            {Object.keys(quizData.users).map(ContenderId => (\n                <ContenderCard key={ContenderId} userId={ContenderId} />\n            ))}\n        </div>\n    );\n}","import React from \"react\";\nimport Header from \"./Header\";\nimport ContenderList from \"./ContenderList\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        overflow: 'auto',\n        paddingBottom: 5,\n    },\n});\n\nexport default function Contenders() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Header/>\n            <ContenderList/>\n        </div>\n    );\n}","import { socket } from '../../../Shared/Socket';\nimport {startTimer} from \"./Emit\";\n\nconst STATE_QUIZ_UPDATE = 'QUIZ-UPDATE';\n\nconst STATE_QUESTION_TIMER_START = 'QUESTION-TIMER-START';\nconst STATE_QUESTION_TIMER_UPDATE = 'QUESTION-TIMER-UPDATE';\nconst STATE_QUESTION_TIMER_STOP = 'QUESTION-TIMER-STOP';\n\nexport const socketEvents = ({ setValue }) => {\n    socket.on(STATE_QUIZ_UPDATE, (quizData) => {\n        setValue(state => { return { ...state, quizData } });\n        if (quizData && quizData.current>0 && quizData.questions[quizData.current-1].autostartTimer) {\n            startTimer();\n        }\n    });\n\n    socket.on(STATE_QUESTION_TIMER_START, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_UPDATE, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n    socket.on(STATE_QUESTION_TIMER_STOP, (timer) => {\n        setValue(state => { return { ...state, timer } });\n    });\n\n};","import { socketEvents } from \"./Events\";\nimport { startQuiz } from \"./Emit\";\n\nexport const initSockets = ({ setValue }) => {\n    socketEvents({ setValue });\n    startQuiz();\n};","import React, { useState, useEffect } from \"react\";\nimport AdminContext from \"./Admin\";\nimport { initSockets } from \"./Sockets\"\n\nconst AdminContextProvider = (props) => {\n    const [value, setValue] = useState({\n        quizData: {\n            quizId: '',\n            users: {},\n            scoreboard:{},\n            questions: {},\n            question: {},\n            allowed: true,\n        },\n        timer: {\n            total: 60,\n            current: 0,\n        }\n    });\n\n    useEffect(() => initSockets({ setValue }), []);\n\n    return(\n        <AdminContext.Provider value={ value }>\n            { props.children }\n        </AdminContext.Provider>\n    )\n};\nexport default AdminContextProvider;","import React from \"react\";\nimport Header from \"./Header\";\nimport Question from \"./Question\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport Contenders from \"./Contenders\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AdminContextProvider from \"./Context\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.backgroundColor,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function QuizMaster(props) {\n    const classes = useStyles();\n    return (\n        <AdminContextProvider>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><Header/></Paper>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Paper className={classes.paper}><Question/></Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Paper className={classes.paper}><ScoreBoard/></Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}><Contenders/></Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </AdminContextProvider>\n    );\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport QuizProjector from \"./QuizProjector\";\nimport QuizContender from \"./QuizContender\";\nimport QuizMaster from \"./QuizMaster\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingTop: 15,\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    return (\n      <Router>\n        <div className={classes.root}>\n          <Switch>\n            <Route path=\"/projector/:quizId\" component={QuizProjector}/>\n            <Route path=\"/quizmaster/\" component={QuizMaster}/>\n            <Route path=\"/play/:quizId\" component={QuizContender}/>\n            <Route path=\"/\" component={QuizContender}/>\n          </Switch>\n        </div>\n      </Router>\n);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}